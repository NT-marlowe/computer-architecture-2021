課題1

講義スライドのソースを利用し，アセンブラをPerlで実装した．バージョンはPerl 5
そのままコピペするとエラーが出たので，trouble shootingを記す
・unix系では￥を\に置き換える
・ダブルクオーテーションが一部全角になっていることがある("syntax : unrecognized character)


課題2
sample_orderに1＋1＝2を行うアセンブリ命令を残す．

課題3
3.1
名称、アセンブリ言語による表現、動作、書式、コードを定めよ．

名称：bgt0_sub
ニーモニック：bg0t_sub (branch-0 sub)
アセンブリ言語による表現： bg0t_sub rt, rs, dpl
動作：
rt <- rt - rs;
if (rt>0)    PC <-PC+dpl      else      PC <-PC + 1;
書式はよくわからん．

コード
sub rt, rt, rs    //rt = rt - rs
blt r0, rt, dpl   //if r0(=0) < rt : PC = PC + dpl
ble rt, r0, 1     //if rt <= r0(=0) : PC = PC + 1



3.4
A
r1  答えを格納するレジスタ，初期値は0
r2  r1に加算する数から引く値，　初期値1
r3  r1に足していく値，　初期値N（order_3_4では例としてN=100）

ラベルの番号はよく分からなかったのだが，
B:r1 += r3 (label25)
C:r3 -= r2
D:if r0 < r3 jump labe25


3.5
変数の初期値の設定は3.4と同じ．
r1 += r3 (labe25)

r3 -= r2; if r0 < r3 jump labe25 else PC += 1; (この行がbgt0_subである)

3.6
3.4では
CとDを合計２クロック使って行っていたが，3.5ではbgt0_subを使うことで1クロックで実行できる．
C,Dは全体でN回実行されるので，Nクロック分処理が高速化される．



computerモジュール内の変数resultを$monitorで表示させることで，計算結果を確認した．

1+1 = 2の結果
result = 2　が確認された．

3.4の階和(N=20)
time = 6000 でresult = d2 = 210　が確認された．
波形はsample_34.vcd

3.5の階和(N=20)
time = 4050 でresult = d2 = 210 が確認された．
波形はsample_35.vcd

テストベンチ内の1つめのinitial文のなかに
#10000 finish;
を入れないとテストが終了しなかった．教科書通りのテストベンチ？というかモジュールでは駄目なんじゃないか．
テストベンチとハードウェア記述を別のファイルに分けたことが原因だろうか？



